<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>VGG Internals on Very Good Graphics Blog</title><link>https://blog.verygoodgraphics.com/categories/vgg-internals/</link><description>Recent content in VGG Internals on Very Good Graphics Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>VeryGoodGraphics</copyright><lastBuildDate>Wed, 14 Sep 2022 21:28:17 +0800</lastBuildDate><atom:link href="https://blog.verygoodgraphics.com/categories/vgg-internals/index.xml" rel="self" type="application/rss+xml"/><item><title>ECS Architecture for GUI applications</title><link>https://blog.verygoodgraphics.com/posts/ecs/</link><pubDate>Wed, 14 Sep 2022 21:28:17 +0800</pubDate><guid>https://blog.verygoodgraphics.com/posts/ecs/</guid><description>&lt;p>ECS, short for Entity-Component-System, is an architectural design pattern originally found in video game programming. It is a powerful technique that eases programming headaches as well as boosts the performance of a game containing a huge amount of interactive objects.&lt;/p>
&lt;p>That&amp;rsquo;s why the VGG engine takes ECS as the fundamental architecture because VGG targets high performance in the very beginning. However, VGG is more about making interactive applications, particularly GUI applications. &lt;a name="initial-problem">&lt;/a>&lt;strong>Would the ECS architecture still be suitable for such a task?&lt;/strong> Let&amp;rsquo;s dive a little deeper.&lt;/p></description></item></channel></rss>